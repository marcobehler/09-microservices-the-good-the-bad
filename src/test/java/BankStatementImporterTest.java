import com.google.common.jimfs.Configuration;
import com.google.common.jimfs.Jimfs;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;
import java.nio.file.FileSystem;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;


/*
 * This Java source file was auto generated by running 'gradle init --type java-library'
 * by 'marco' at '08.06.17 16:27' with Gradle 2.10
 *
 * @author marco, @date 08.06.17 16:27
 */
public class BankStatementImporterTest {

    private Path directory;

    @Before
    public void setup() throws IOException {
        // For a simple file system with Unix-style paths and behavior:
        FileSystem fs = Jimfs.newFileSystem(Configuration.unix());
        directory = fs.getPath("/ourXmlDirectory");

        Files.createDirectory(directory);
    }

    @Test
    public void imports_no_files() throws IOException {
        List<Path> paths = new BankStatementImporter().importFiles(directory);
        assertThat(paths).hasSize(0);
    }

    @Test
    public void import_xml_file() throws IOException {
        Path testXml = directory.resolve("test.xml");
        Files.createFile(testXml);

        List<Path> paths = new BankStatementImporter().importFiles(directory);
        assertThat(paths).hasSize(1);
        assertThat(paths).containsExactly(testXml);
    }

    @Test
    public void does_not_import_jpg_file() throws IOException {
        Files.createFile(directory.resolve("test.xml"));
        Files.createFile(directory.resolve("cat.jpg"));

        List<Path> paths = new BankStatementImporter().importFiles(directory);
        assertThat(paths).hasSize(1);
    }



}
